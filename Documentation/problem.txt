
20150305
1.在执行清配置后应该根据当前的组网情况决定是否需要立即进行一次重配置。
2.afn_10_F101这个函数还需要仔细的思考一下，看看到底应该实现成什么样。
3.对于之前设定的一些变量缓存，应该设置一个标志位判断是否进行过改变，进行过改变后就需要进行相应的时间，然后写入指定的位置

20150316
1.关于数据存储部分，已经将Flash的首页地址留空，以防止意外的被擦除。
2.对于节点信息及路由部分做一个CRC32校验，防止因为以外的擦除导致节点信息发生变化而产生各种难以预料的后果。
3.关于上一点，因为CRC32的结果存入与之前的数据写入非一次性，不保证在写入的期间断电，如何进行恢复？
暂时考虑为
首先读取节点资料部分，如果节点资料校验通过，则认为节点资料无误，否则就将所有数据初始化
其次读取路由信息部分，如果路由信息校验通过，则正常运行，否则认为路由信息有误，清网络并且执行一次重组网。

20150319
1.思考关于现在邻居数量较大的情况下，节点比较密集，则有可能组网时间很漫长，而且在路径进行切换的时候会有很多重复的路径尝试

20150320
1.关于路由断路功能的想法。
路由断路主要作用可以明确的反馈当前路径上是那一个节点之后的通信出现问题。
在出现问题之前的节点路径更新的时候会将双方的成功率进行更新，表征之前的节点通信质量都比较好。
越靠近主节点的节点的权值会因为中继通信的原因，权值越加越高。
在现有的程序框架下，路由的实现是根据邻居表来获取；在同等条件下，成功次数较多的节点会被优先选用。那么经过一点时间的运行后，关键节点被选用的可能性越来越高。

可能会出现，某一节点，它所有的邻居路径都很优秀，但是由于该节点与它所有的邻居通信都不可靠，然后一直出现路径切换。

2.关于低速率的适配问题
预打算在抄表的时候实现，也就是一个抄表轮次中尝试三次，使用三种不同的速率进行尝试，如果都失败则返回失败。